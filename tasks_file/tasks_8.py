
"""Задача 8-1
На вход программе подается строка генетического кода, состоящая из букв А (аденин), Г (гуанин), Ц (цитозин), Т (тимин).
Подкорректируйте код.
Если рядом стоят А и Г (или Г и А), то поменяйте их местами.
Если рядом стоят Ц и Т (или Т и Ц), то поместите АГ между ними."""

s = list(input())
i = 0

#не использовали for тк там нельзя менять i
while i < len(s) - 1:
    if s[i] + s[i+1] in 'АГА':
        s[i], s[i+1] = s[i+1],s[i]
        i += 1
    elif s[i] + s[i+1] in 'ТЦТ':
        s.insert(i+1,'АГ')
        i += 2
    i += 1
print(''.join(s))

"""Задача 8-2
На вход подается список, состоящий из списков чисел, например: lst = [[1,5,3], [2,44,1, 4], [3,3]]
Отсортируйте этот список по возрастанию общего количества цифр в каждом списочке.
Каждый списочек отсортируйте по убыванию.
Такие словари называются вложенными. И для указания элементов необходимо указывать несколько индексов, например:
lst[0][0] = 1, lst[0][1] = 5, lst[1][0] = 2, lst[1][3] = 4
Что напечатает print(lst[1][1])?"""

lst = [[1,5,3], [2,44,1, 4], [3,3]]

def digits(lst):
    res = 0
    for i in lst:
        res += len(str(i))
    return res
new_lst = sorted(lst,key=digits) #сортируем список по возрастанию общего кол-а цифр
print(new_lst)

res = []
for i in new_lst:
    res.append(sorted(i, reverse=True))
print(res)

"""Задача 8-3
Дан список слов. Отсортируйте его по количеству уникальных букв в каждом слове в обратном порядке.
Например: [‘abab’, ‘xx’, ‘aaaaaaa’, ‘abcbab’].
Результат: [‘abcbab’, ‘abab’, ‘aaaaaaa’, ‘xx’]
Если число уникальных букв одинаково, то порядок алфавитный."""

lst = ['abab', 'xx', 'aaaaaaa', 'abcbab']

print(sorted(lst))  #['aaaaaaa', 'abab', 'abcbab', 'xx']
print(sorted(lst,key = lambda x: len(set(x)))) #['xx', 'aaaaaaa', 'abab', 'abcbab'] сортируем по длине кол-а уникальных букв
print(sorted(lst,key = lambda x: -len(set(x)))) #обра-й порядок ['abcbab', 'abab', 'xx', 'aaaaaaa']
print(sorted(lst,key = lambda x: (-len(set(x)),x))) #['abcbab', 'abab', 'aaaaaaa', 'xx'] + алфавитный порядок